Drop VIEW IF EXISTS mcp.v_transhist_det_rep;
CREATE VIEW mcp.v_transhist_det_rep 
    ( 
	trace_audit_no, 
	org_trace_audit, 
	trans_date, 
	trans_time, 
	card_no, 
	card_reference_no,
	card_bin,
	cp_settle_curr,
	cp_currency_code,
	amount_processed, 
	amount_setlment, 
	description,
	description_ml,	
	card_aceptor_code, 
	card_aceptor_name,
	card_aceptor_name_ml,	
	remaining_balance, 
	remaining_balance_notnvl,
	interchange_fee, 
	interchange_fee_notnvl,
	trans_type_desc, 
	trans_type_abrv, 
	network_id, 
	network_name, 
	merchant_cat_code, 
	merchant_name,
	merchant_name_ml,	
	card_prg_id, 
	card_prg_abrv, 
	card_prg_name, 
	service_id, 
	service_abrv, 
	service_name, 
	iso_serial_no, 
	iso_message_type, 
	charged, 
	trans_type, 
	switch_id, 
	switch_type,
	auth_id_resp, 
	retrieval_ref_no, 
	sys_trace_auditno, 
	trans_local_dtime, 
	device_id, 
	amount_requested, 
	device_type, 
	is_international, 
	settlement_date,
	response_code,
	exch_rate,
	card_status,
	currency_code, 
	billing_cur_code,
	settl_cur_code, 
	country_code,
	--institution_id ,
	acq_inst_code,
	available_balance, 
	available_balance_notnvl,
	cca_fee_flag,
	cca_fee,
	clerk_id,
    billing_cur_ex_rate,
	settl_cur_ex_rate,
	is_pin_based,
	process_mode,
	type_id,
    is_decline_trans,
	receiver_name,
	trans_state_code,
	acq_user_id,
	interface,
	optional_issuer_fee,
    fromZone,
    toZone,
	point_of_srv_code,
	fee_trace_audit,
	surcharge_fee,
	post_card_sts,
	cc_payment_trns,
	cc_is_cash_adv,
	chargeback_flag,
	locale,
	wallet_token_no,
	wallet_req_id,
	wallet_req_desc,
	wallet_token_type,
	token_type_desc,
	wallet_token_expiry,
	cash_back_flag,
	cashback_amount,
	is_surcharge,
	service_fee,
	is_service_fee,
	state_code,
	state_desc,
	country_codes,
	response_desc,
	token_requester_id
) 
AS
SELECT
    tr.trace_audit_no,
    tr.org_trace_audit,
    tr.trans_date,
    tr.trans_time,
    tr.card_no AS card_no ,
    c.branch_fiid AS  card_reference_no ,
    NVL(cp.card_bin, 0) card_bin , 
    cp.cp_settle_curr,
    cp.currency_code,
    NVL(tr.amount_processed, 0),
    NVL(amount_setlment, 0),
    tr.description,
    NVL(tr_ml.description, tr.description) AS description_ml,	
    tr.card_aceptor_code,
    tr.card_aceptor_name,
	NVL(tr_ml.card_aceptor_name, tr.card_aceptor_name) AS card_aceptor_name_ml,
    CASE WHEN cp.program_category = 'C' THEN 0 ELSE NVL(tr.remaining_balance, 0) END AS remaining_balance, 
    CASE WHEN cp.program_category = 'C' THEN 0 ELSE tr.remaining_balance END AS remaining_balance_notnvl,
    NVL(tr.interchange_fee, 0),
    tr.interchange_fee,
    trans_type_desc,
    trans_type_abrv,
    tr.efunddataacqnetid,
    nwk.network_name,
    tr.merchant_cat_code,
    tr.merchant_name,
	NVL(tr_ml.merchant_name, tr.merchant_name) AS merchant_name_ml,
    tr.card_prg_id,
    cp.card_prg_abrv,
    cp.card_prg_name,
    tr.service_id,
    svc.service_abrv,
    svc.service_name,
    tr.iso_serial_no,
    tr.iso_message_type,
    tr.charged,
    tr.trans_type,
    tr.switch_id,
	tr.switch_type,
    tr.auth_id_resp ,
    tr.retrieval_ref_no,
    tr.sys_trace_auditno,
    tr.trans_local_dtime,
    tr.device_id,
    NVL(tr.amount_requested, 0),
    tr.device_type,
    tr.is_international,
    tr.settlement_date,
    tr.response_code,
    tr.exch_rate,
    tr.card_status,
	tr.currency_code, 
	tr.bill_cc ,
	tr.settlement_cc,
    tr.country_code,
    --( SELECT sv.institution_id FROM system_variables sv ) institution_id ,
    tr.acq_inst_code,
    NVL(tr.available_balance, 0),
    tr.available_balance,
    ( CASE WHEN tr.stl_code IS NOT NULL THEN 1 ELSE ( CASE WHEN tr.amount_tp_fee IS NOT NULL THEN 1 ELSE 0 END) END) AS cca_fee_flag, 
    ( CASE WHEN tr.amount_tp_fee IS NOT NULL AND tr.response_code = '00' AND tr.iso_message_type <> '0722' THEN (NVL(tr.amount_tp_fee,0)) ELSE 0 END ) AS CCA_FEE,
    tr.clerk_id,
	tr.ex_rate_bill     AS billing_cur_ex_rate,
    tr.ex_rate_setlment AS settl_cur_ex_rate,
    tr.is_pin_based,
    tr.process_mode,
    tr.type_id,
    CASE WHEN tr.iso_message_type[1,2] = '01' THEN 'N'
	WHEN tr.iso_message_type[1,2] = '04' AND tr.response_code is NULL THEN 'N'
	WHEN tr.response_code IN ('00', 'N1','05', '91', '96') OR tr.response_code IS NULL THEN 'N' ELSE 'Y'  END is_decline_trans,
    tr.receiver_name,
    tr.state,
    tr.acq_user_id AS company_entry_descs,
    tr.interface,
    NVL(tr.optional_isuer_fee, 0),
    ( SELECT NVL(sp.param_value, 'PST')  FROM system_parameters sp WHERE param_id= 'DEF_INPUT_TIMEZONE' ) fromZone,
    ( SELECT NVL(NVL(param_value, ( SELECT sp.param_value FROM system_parameters sp WHERE param_id= 'DEF_INPUT_TIMEZONE' ) ), 'PST') FROM system_parameters sp WHERE param_id= 'DEF_OUTPUT_TIMEZONE' ) toZone,
    point_of_srv_code[1,2] AS point_of_srv_code,
    fee_trace_audit,
    (CASE WHEN tr.iso_message_type[1,2] in ('02','04') and tr.trans_process_fee is not null THEN tr.trans_process_fee END) trans_process_fee,
    tr.post_card_sts,
	tr.is_cc_payment_trns,
	tr.is_cash_adv,
	tr.chargeback_flag,
	NVL(sp.param_value, 'en') as locale,
	tr.token_no as wallet_token_no,
	wri.wallet_type as wallet_req_id,
	(select wt.description from b_wallet_types wt where wri.wallet_type = wt.wallet_type ) as wallet_req_desc,
	tr.token_mob_type as wallet_token_type,
	(select btm.description from b_token_mob_types btm where btm.token_mob_type=tr.token_mob_type) as token_type_desc,
	tr.token_expiry as wallet_token_expiry,
	NVL(tr.cash_back_flag,0) as cash_back_flag ,
	NVL(tr.additional_amounts,0) as cashback_amount,
	(CASE WHEN iso_message_type[1,2] in ('02','04') AND tr.trans_process_fee is not null then (CASE WHEN tr.trans_indicator = '211' then 'W' else 'Y' END) ELSE 'N' END) is_surcharge,
	tr.commission_amount as service_fee,
	(CASE WHEN NVL(tr.commission_amount,0) <> 0 THEN 'Y' ELSE 'N' END) is_service_fee
	,c.state_code
	,(select st.state_name from states st where st.state_Code=c.state_code and c.country_code=st.country_code) 
	,c.country_code
	,(select irc.resp_desc from iso_resp_codes irc where irc.resp_code = tr.response_code) as response_desc
	, tr.token_req_id as token_requester_id
	
FROM
    trans_requests tr,
    OUTER card_programs cp,
    OUTER transaction_types ttype,
    OUTER networks nwk,
    OUTER services svc,
	OUTER b_wallet_req_ids wri,
	OUTER trans_requests_ml tr_ml,
	system_parameters sp,outer  cards c
    
WHERE
    tr.trans_type = ttype.trans_type
AND tr.efunddataacqnetid = nwk.network_id
AND tr.card_prg_id = cp.card_prg_id
AND tr.service_id = svc.service_id
AND (tr.response_code != 'HI' OR tr.response_code IS NULL)
AND sp.param_id = 'Default_Lang'
AND tr.token_req_id = wri.wallet_req_id
AND tr.switch_type = wri.switch_type
AND tr.trace_audit_no = tr_ml.trace_audit_no
AND sp.param_value = tr_ml.locale
AND tr.card_no=c.card_no;

REVOKE ALL ON v_transhist_det_rep FROM PUBLIC AS mcp;
gRANT SELECT ON v_transhist_det_rep to app_role AS mcp;
gRANT SELECT ON v_transhist_det_rep to data_select_role AS mcp;